{% extends 'base.html' %} {% load staticfiles %} 


{% block cssformat %}

    <link rel="stylesheet" href="/static/plugins/leaflet/MarkerCluster.css" />
    <link rel="stylesheet" href="/static/plugins/leaflet/MarkerCluster.Default.css" />

    <style> 
        /* Map */
        #map {
            position: absolute;
            float: left;
            top: 1%;
            height: 800px;
            width: 100%;
            z-index: 1;
        }

        .leaflet-popup-content {
            width:auto !important;
        }
    </style>

{% endblock %}



{% block content %}

	<div class="row">
	    <div id="breadcrumb" class="col-xs-12">
		<a href="#" class="show-sidebar">
		    <i class="fa fa-bars"></i>
		</a>
		<ol class="breadcrumb pull-left">
		    <li><a href="/">Home</a></li>
		    <li><a href="/normais">Focos de Incêndio</a></li>
		</ol>
	    </div>
	</div>

       <div id="map"></div>
{% endblock %}



{% block scriptsJava %}   

<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>
<script src="/static/plugins/leaflet/leaflet.markercluster.js"></script>
<script src="/static/js/Leaflet-WFST/dist/Leaflet-WFST.src.js"></script>
<script src="/static/js/leaflet-ajax/leaflet.ajax.js"></script>





<script type="text/javascript">
// add an OpenStreetMap tile layer
    
  // create the map, assign to the mao div, and set it's lat, long, and zoom level (12)
  //NYC
   // big thanks to
   // http://gis.stackexchange.com/questions/64406/getting-wfs-data-from-geoserver-into-leaflet
   // for making this script a lot better
    
    // Add MapBox Tiles
   

    var mbAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                        'Imagery © <a href="http://mapbox.com">Mapbox</a>',
            mbUrl ='https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6IjZjNmRjNzk3ZmE2MTcwOTEwMGY0MzU3YjUzOWFmNWZhIn0.Y8bhBaUMqFiPrDRW9hieoQ';

    var grayscale   = L.tileLayer(mbUrl, {id: 'mapbox.light', attribution: mbAttr}),
            streets  = L.tileLayer(mbUrl, {id: 'mapbox.streets',   attribution: mbAttr});

    var Esri_WorldImagery = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', { 
                attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
        });

    var baseLayers = {
            "Grayscale": grayscale,
            "Streets": streets,
            "ESRI" : Esri_WorldImagery,
    };

    function style(color) {
        return {
            fillColor: color, 
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.7
         };
    }


    function camada(lyrName, display, lyr,colColors,cpoLegenda, cpoPopUp, lyrGroup){

        var owsrootUrl = 'http://geonode.terravisiongeo.com.br/geoserver/ows';

        var defaultParameters = {
            service : 'WFS',
            version : '1.0',
            request : 'GetFeature',
            maxfeatures : 100000, 
            typeName : lyr,
            outputFormat : 'text/javascript',
            format_options : 'callback:getJson',
            SrsName : 'EPSG:4326'
        };
        // get the srs name from Geoserver --> Layers
        // that piece of information is critical to getting this working
                                                
        var parameters = L.Util.extend(defaultParameters);
        var URL = owsrootUrl + L.Util.getParamString(parameters);
                                                    
        //ajax to get map features
        $.ajax({
            type: "POST",
            url: URL,
            dataType: 'jsonp',
            jsonpCallback : 'getJson',
            async : false,
            //upon success extraction of data
            success: function (data) {
                //create a new geojson layer
                lyrName  = new L.geoJson(data, {
                    // apply a stylep
                    style: function( feature){
                       key = feature.properties[cpoLegenda];
                       cor = colColors[key];
                       return style(cor);
                    },
                    onEachFeature: function(feature, layer){
                        layer.bindPopup(feature.properties[cpoPopUp]);
                        }
                                    }, { id : display } );
                lyrGroup.addLayer(lyrName);
            }
        });

    }


    var urlWMS = "http://geonode.terravisiongeo.com.br/geoserver/geonode/wms?";

    var trilhaLayer = L.tileLayer.wms(urlWMS, {
                layers: 'geonode:_2ferr004_ger_ln_drenagem',
                format: 'image/png',
                transparent: true,
                version: '1.1.0',
                attribution: "Terravision"
            });

    var sedeLayer = L.tileLayer.wms(urlWMS, {
                layers: 'geonode:_2ferr004_ger_pontos_sede',
                format: 'image/png',
                transparent: true,
                version: '1.1.0',
                attribution: "Terravision"
            });

    var torresLayer = L.tileLayer.wms(urlWMS, {
                layers: 'geonode:_2ferr004_ger_pt_torres',
                format: 'image/png',
                transparent: true,
                version: '1.1.0',
                attribution: "Terravision"
            });

    var perimetroLayer = L.tileLayer.wms(urlWMS, {
                layers: 'geonode:_2ferr004_ger_ln_perimetro_linha',
                format: 'image/png',
                transparent: true,
                version: '1.1.0',
                attribution: "Terravision"
            });



    var vegetacaoLayer = new L.GeoJSON();
    var solarLayer = new L.GeoJSON();
    var zonLayer = new L.GeoJSON();
    var torresLayer = new L.GeoJSON();
    var glebasLayer = new L.GeoJSON();


    var lyrVegetacao   = L.layerGroup();
    var lyrZoneamento = L.layerGroup();
    var lyrSolar   = L.layerGroup();
    var lyrGlebas   = L.layerGroup();

    var colVegetacao = { 'am-14' : '#800026' ,
                         'am-13' : '#BD0026' ,
                         'am-15' : '#E31A1C' ,
                         'am-18' : '#FC4E2A' ,
                         'am-17' : '#FD8D3C' };
 
    var colZoneamento = { 'am-2' : '#edf8fb' ,
                         'am-5' : '#ccece6' ,
                         'am-5' : '#525252' ,
                         'am-8' : '#99d8c9' ,
                         'am-6' : '#66c2a4' ,
                         'am-1' : '#2ca25f' ,
                         'am-3' : '#006d2c' };

    var colSolar = { 'Edificada' : '#fdc086', 'Loteamento' : '#beaed4' };


    var colGlebas = {   'Gleba 5'            : '#b2df8a',
                        'Gleba 2'            : '#b2df8a',
                        'Gleba 4'            : '#b2df8a',
                        'Gleba 3'            : '#b2df8a',
                        'Faixa de Servidão 1': '#a6cee3',
                        'Gleba 6'            : '#b2df8a',
                        'Faixa de Servidão 2': '#a6cee3',
                        'Faixa de Servidão 3': '#a6cee3',
                        'Faixa de Servidão 4': '#a6cee3',
                        'Faixa de Servidão 5': '#a6cee3',
                        'Faixa de Servidão 6': '#a6cee3',
                        'Faixa de Servidão 7': '#a6cee3',
                        'Faixa de Servidão 8': '#a6cee3',
                        'Faixa de Servidão 9': '#a6cee3',
                        'Gleba 1'            : '#b2df8a'};



    camada(vegetacaoLayer, 'Vegetacao',       'geonode:_2ferr004_ger_pl_vegetacao',         colVegetacao,  'CODIGO',    'NOME',        lyrVegetacao);
    camada(glebasLayer,    'Glebas',          'geonode:_2ferr004_ger_pl_perimetro_glebas',  colGlebas,     'Glebas',    'Glebas',      lyrGlebas);
    camada(zonLayer,       'Zoneamento',      'geonode:_2ferr004_ger_pl_zoneamento',        colZoneamento, 'CODIGO',    'NOME',        lyrZoneamento);
    camada(solarLayer,     'Solar Barreiro',  'geonode:_2ferr004_ger_pl_solar_barreiro',    colSolar,      'Categoria', 'Categoria',   lyrSolar);
    
    var OverLays = { 'Vegetacao'    : lyrVegetacao , 
                     'Zoneamento'   : lyrZoneamento, 
                     'Solar'        : lyrSolar, 
                     'Trilha'       : trilhaLayer, 
                     "Sede"         : sedeLayer, 
                     'Torres'       : torresLayer,
                     'Glebas'       : lyrGlebas,
                     'Perimetro'    : perimetroLayer};

    var map = L.map('map', {  center: [-20.0511, -44.0155 ], zoom: 12,  layers : [Esri_WorldImagery, lyrVegetacao, lyrGlebas ]} );
    

    L.control.layers(baseLayers, OverLays).addTo(map);



</script>


{% endblock %}



